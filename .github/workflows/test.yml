name: Test

on: [push, pull_request]
  
jobs:
  download-module:
    name: Download go module
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16.x
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Download module
        run: go mod download
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-module-${{ github.repository }}-${{ github.sha }}
          restore-keys: |
            go-module-${{ github.repository }}-${{ github.sha }}
  
  code-linter:
    name: Lint all codes and file format
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository 
        uses: actions/checkout@v2
      - name: Validate migration file's name      
        run: make validate-migration
      - name: Format proto files using clang-format
        uses: DoozyX/clang-format-lint-action@v0.11
        with:
          source: '.'
          extensions: 'proto'
          clangFormatVersion: 11
      - name: Lint using golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.38.0

  import-linter:
    name: Lint import block
    if: github.event_name == 'push'
    needs: [download-module]
    runs-on: ubuntu-latest
    container:
      image: indrasaputra/protogen:0.0.1
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-module-${{ github.repository }}-${{ github.sha }}
          restore-keys: |
            go-module-${{ github.repository }}-${{ github.sha }}
      - name: Check import blocks
        run: |
          make format
          make check-import

  unit-test:
    name: Unit test and coverage
    needs: [download-module]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16.x
      - name: Clone repository
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-module-${{ github.repository }}-${{ github.sha }}
          restore-keys: |
            go-module-${{ github.repository }}-${{ github.sha }}
      - name: Run unit test and coverage 
        run: make cover
      - name: Push coverage result to Codecov
        uses: codecov/codecov-action@v1.0.13

  # build-docker:
  #   name: Build and push docker image
  #   if: github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker:dind
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v2
  #     - name: Build and push image
  #       run: |
  #         docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
  #         docker build --no-cache -t ${{ github.repository }}:${{ github.sha }} -f Dockerfile .
  #         docker push ${{ github.repository }}:${{ github.sha }}

  # integration-test:
  #   name: Integration test
  #   if: github.event_name == 'push'
  #   needs: [build-docker]
  #   runs-on: ubuntu-latest
  #   container:
  #     image: indrasaputra/golang:0.0.1
  #   services:
  #     postgres:
  #       image: postgres:13.2-alpine
  #       env:
  #         POSTGRES_USER: postgresuser
  #         POSTGRES_PASSWORD: postgrespassword
  #         POSTGRES_DB: toggle
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #     redis:
  #       image: redis:6.2-alpine
  #       ports:
  #         - 6379:6379
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #     toggle:
  #       image: ${{ github.repository }}:${{ github.sha }}
  #       env:
  #         PORT_GRPC: 8080
  #         PORT_REST: 8081
  #         POSTGRES_HOST: postgres
  #         POSTGRES_PORT: 5432
  #         POSTGRES_USER: postgresuser
  #         POSTGRES_PASSWORD: postgrespassword
  #         POSTGRES_NAME: toggle
  #         POSTGRES_MAX_OPEN_CONNS: 50
  #         POSTGRES_MAX_CONN_LIFETIME: 10m
  #         POSTGRES_MAX_IDLE_LIFETIME: 5m
  #         REDIS_ADDRESS: redis:6379
  #         REDIS_TTL: 5
  #       ports:
  #         - 8080:8080
  #         - 8081:8081
  #       options: >-
  #         --health-cmd "./wait-for -t 4 localhost:8081"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v2
  #     - name: Run integration test using godog
  #       env:
  #         SERVER_URL: http://toggle:8081/v1/toggles
  #         POSTGRES_HOST: postgres
  #         POSTGRES_PORT: 5432
  #         POSTGRES_USER: postgresuser
  #         POSTGRES_PASSWORD: postgrespassword
  #         POSTGRES_NAME: toggle
  #       run: |
  #         make migrate url="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_NAME}"
  #         make test.integration
