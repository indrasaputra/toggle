// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: proto/indrasaputra/toggle/v1/toggle.proto

package togglev1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToggleErrorCode int32

const (
	// Default enum code according to
	// https://medium.com/@akhaku/protobuf-definition-best-practices-87f281576f31.
	ToggleErrorCode_UNSPECIFIED ToggleErrorCode = 0
	// Unexpected behavior occured in system.
	ToggleErrorCode_INTERNAL ToggleErrorCode = 1
	// Toggle instance is empty or nil.
	ToggleErrorCode_EMPTY_TOGGLE ToggleErrorCode = 2
	// Toggle already exists.
	// The uniqueness of a toggle is represented by its key.
	ToggleErrorCode_ALREADY_EXISTS ToggleErrorCode = 3
	// Toggle's key is invalid.
	// It can be triggered when the key doesn't contain character other than alphanumeric and dash.
	ToggleErrorCode_INVALID_KEY ToggleErrorCode = 4
	// Toggle's value (is_enabled field) is invalid.
	// The value must be boolean.
	ToggleErrorCode_INVALID_VALUE ToggleErrorCode = 5
	// Toggle not found in system.
	ToggleErrorCode_NOT_FOUND ToggleErrorCode = 6
	// Toggle's value (is_enabled field) is true and it can't be deleted.
	// It must be disabled (is_enabled set to false) first before deletion.
	ToggleErrorCode_PROHIBITED_TO_DELETE ToggleErrorCode = 7
)

// Enum value maps for ToggleErrorCode.
var (
	ToggleErrorCode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INTERNAL",
		2: "EMPTY_TOGGLE",
		3: "ALREADY_EXISTS",
		4: "INVALID_KEY",
		5: "INVALID_VALUE",
		6: "NOT_FOUND",
		7: "PROHIBITED_TO_DELETE",
	}
	ToggleErrorCode_value = map[string]int32{
		"UNSPECIFIED":          0,
		"INTERNAL":             1,
		"EMPTY_TOGGLE":         2,
		"ALREADY_EXISTS":       3,
		"INVALID_KEY":          4,
		"INVALID_VALUE":        5,
		"NOT_FOUND":            6,
		"PROHIBITED_TO_DELETE": 7,
	}
)

func (x ToggleErrorCode) Enum() *ToggleErrorCode {
	p := new(ToggleErrorCode)
	*p = x
	return p
}

func (x ToggleErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToggleErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_enumTypes[0].Descriptor()
}

func (ToggleErrorCode) Type() protoreflect.EnumType {
	return &file_proto_indrasaputra_toggle_v1_toggle_proto_enumTypes[0]
}

func (x ToggleErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToggleErrorCode.Descriptor instead.
func (ToggleErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{0}
}

type CreateToggleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toggle *Toggle `protobuf:"bytes,1,opt,name=toggle,proto3" json:"toggle,omitempty"`
}

func (x *CreateToggleRequest) Reset() {
	*x = CreateToggleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateToggleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateToggleRequest) ProtoMessage() {}

func (x *CreateToggleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateToggleRequest.ProtoReflect.Descriptor instead.
func (*CreateToggleRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{0}
}

func (x *CreateToggleRequest) GetToggle() *Toggle {
	if x != nil {
		return x.Toggle
	}
	return nil
}

type CreateToggleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateToggleResponse) Reset() {
	*x = CreateToggleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateToggleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateToggleResponse) ProtoMessage() {}

func (x *CreateToggleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateToggleResponse.ProtoReflect.Descriptor instead.
func (*CreateToggleResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{1}
}

type GetToggleByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetToggleByKeyRequest) Reset() {
	*x = GetToggleByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToggleByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToggleByKeyRequest) ProtoMessage() {}

func (x *GetToggleByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToggleByKeyRequest.ProtoReflect.Descriptor instead.
func (*GetToggleByKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{2}
}

func (x *GetToggleByKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetToggleByKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toggle *Toggle `protobuf:"bytes,1,opt,name=toggle,proto3" json:"toggle,omitempty"`
}

func (x *GetToggleByKeyResponse) Reset() {
	*x = GetToggleByKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToggleByKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToggleByKeyResponse) ProtoMessage() {}

func (x *GetToggleByKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToggleByKeyResponse.ProtoReflect.Descriptor instead.
func (*GetToggleByKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{3}
}

func (x *GetToggleByKeyResponse) GetToggle() *Toggle {
	if x != nil {
		return x.Toggle
	}
	return nil
}

type GetAllTogglesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTogglesRequest) Reset() {
	*x = GetAllTogglesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTogglesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTogglesRequest) ProtoMessage() {}

func (x *GetAllTogglesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTogglesRequest.ProtoReflect.Descriptor instead.
func (*GetAllTogglesRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{4}
}

type GetAllTogglesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toggles []*Toggle `protobuf:"bytes,1,rep,name=toggles,proto3" json:"toggles,omitempty"`
}

func (x *GetAllTogglesResponse) Reset() {
	*x = GetAllTogglesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTogglesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTogglesResponse) ProtoMessage() {}

func (x *GetAllTogglesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTogglesResponse.ProtoReflect.Descriptor instead.
func (*GetAllTogglesResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllTogglesResponse) GetToggles() []*Toggle {
	if x != nil {
		return x.Toggles
	}
	return nil
}

type EnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *EnableRequest) Reset() {
	*x = EnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableRequest) ProtoMessage() {}

func (x *EnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableRequest.ProtoReflect.Descriptor instead.
func (*EnableRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{6}
}

func (x *EnableRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type EnableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableResponse) Reset() {
	*x = EnableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableResponse) ProtoMessage() {}

func (x *EnableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableResponse.ProtoReflect.Descriptor instead.
func (*EnableResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{7}
}

type DisableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DisableRequest) Reset() {
	*x = DisableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableRequest) ProtoMessage() {}

func (x *DisableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableRequest.ProtoReflect.Descriptor instead.
func (*DisableRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{8}
}

func (x *DisableRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DisableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableResponse) Reset() {
	*x = DisableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableResponse) ProtoMessage() {}

func (x *DisableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableResponse.ProtoReflect.Descriptor instead.
func (*DisableResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{9}
}

type DeleteToggleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteToggleRequest) Reset() {
	*x = DeleteToggleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteToggleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteToggleRequest) ProtoMessage() {}

func (x *DeleteToggleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteToggleRequest.ProtoReflect.Descriptor instead.
func (*DeleteToggleRequest) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteToggleRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteToggleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteToggleResponse) Reset() {
	*x = DeleteToggleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteToggleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteToggleResponse) ProtoMessage() {}

func (x *DeleteToggleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteToggleResponse.ProtoReflect.Descriptor instead.
func (*DeleteToggleResponse) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{11}
}

type Toggle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsEnabled   bool                   `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Toggle) Reset() {
	*x = Toggle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toggle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toggle) ProtoMessage() {}

func (x *Toggle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toggle.ProtoReflect.Descriptor instead.
func (*Toggle) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{12}
}

func (x *Toggle) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Toggle) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *Toggle) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Toggle) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Toggle) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ToggleError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode ToggleErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=proto.indrasaputra.toggle.v1.ToggleErrorCode" json:"error_code,omitempty"`
}

func (x *ToggleError) Reset() {
	*x = ToggleError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleError) ProtoMessage() {}

func (x *ToggleError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleError.ProtoReflect.Descriptor instead.
func (*ToggleError) Descriptor() ([]byte, []int) {
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP(), []int{13}
}

func (x *ToggleError) GetErrorCode() ToggleErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ToggleErrorCode_UNSPECIFIED
}

var File_proto_indrasaputra_toggle_v1_toggle_proto protoreflect.FileDescriptor

var file_proto_indrasaputra_toggle_v1_toggle_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70,
	0x75, 0x74, 0x72, 0x61, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e,
	0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x06, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61,
	0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x53, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41,
	0x3e, 0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x4a, 0x12, 0x22, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2d, 0x6d, 0x65, 0x6e, 0x75,
	0x62, 0x61, 0x72, 0x22, 0x78, 0x32, 0x80, 0x01, 0x01, 0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75,
	0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75,
	0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x52, 0x07, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x22, 0x64, 0x0a,
	0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e,
	0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4a,
	0x12, 0x22, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2d, 0x6d, 0x65, 0x6e, 0x75, 0x62,
	0x61, 0x72, 0x22, 0x78, 0x32, 0x80, 0x01, 0x01, 0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20,
	0x61, 0x20, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4a, 0x12, 0x22, 0x64, 0x72, 0x6f, 0x70, 0x64,
	0x6f, 0x77, 0x6e, 0x2d, 0x6d, 0x65, 0x6e, 0x75, 0x62, 0x61, 0x72, 0x22, 0x78, 0x32, 0x80, 0x01,
	0x01, 0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x11, 0x0a, 0x0f,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x61,
	0x20, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4a, 0x12, 0x22, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f,
	0x77, 0x6e, 0x2d, 0x6d, 0x65, 0x6e, 0x75, 0x62, 0x61, 0x72, 0x22, 0x78, 0x32, 0x80, 0x01, 0x01,
	0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb3, 0x03, 0x0a, 0x06, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12, 0x53,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e,
	0x32, 0x1d, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4a,
	0x12, 0x22, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2d, 0x6d, 0x65, 0x6e, 0x75, 0x62,
	0x61, 0x72, 0x22, 0x78, 0x32, 0x80, 0x01, 0x01, 0xd2, 0x01, 0x03, 0x6b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x51, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x32, 0x92, 0x41, 0x2b, 0x32, 0x19, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x27, 0x73, 0x20, 0x75, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x20, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4a, 0x04, 0x74, 0x72, 0x75, 0x65, 0xa2, 0x02, 0x07,
	0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x09, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x7f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5d, 0x92, 0x41, 0x5a,
	0x32, 0x21, 0x41, 0x20, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x73, 0x65, 0x20, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x74, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x4a, 0x2f, 0x22, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x73, 0x68, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x2f, 0x75, 0x6e, 0x73, 0x68, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x20, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x20, 0x6d, 0x65, 0x6e, 0x75,
	0x62, 0x61, 0x72, 0x22, 0x78, 0xff, 0x01, 0x80, 0x01, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x0b, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72,
	0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0xa3, 0x01, 0x0a, 0x0f, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4d, 0x50,
	0x54, 0x59, 0x5f, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x04,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x45, 0x44,
	0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x07, 0x32, 0x85, 0x08, 0x0a,
	0x0d, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x92,
	0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70,
	0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61,
	0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x0b,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x3a, 0x06, 0x74, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69,
	0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61,
	0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x8d, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x12, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75,
	0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61,
	0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12,
	0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x12, 0x85, 0x01, 0x0a,
	0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64,
	0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x1a, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x2f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61,
	0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75,
	0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x90, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73,
	0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x64,
	0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2e, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6b,
	0x65, 0x79, 0x7d, 0x1a, 0x8e, 0x01, 0x92, 0x41, 0x8a, 0x01, 0x12, 0x87, 0x01, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x73, 0x20, 0x62, 0x61, 0x73, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x20, 0x6f, 0x72, 0x20, 0x75, 0x73, 0x65, 0x20, 0x63, 0x61, 0x73, 0x65, 0x73, 0x20, 0x74, 0x6f,
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2d, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x20, 0x74, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65,
	0x64, 0x20, 0x62, 0x79, 0x20, 0x61, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x61, 0x73, 0x20, 0x69, 0x74,
	0x73, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2f,
	0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x64,
	0x72, 0x61, 0x73, 0x61, 0x70, 0x75, 0x74, 0x72, 0x61, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescOnce sync.Once
	file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescData = file_proto_indrasaputra_toggle_v1_toggle_proto_rawDesc
)

func file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescGZIP() []byte {
	file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescOnce.Do(func() {
		file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescData)
	})
	return file_proto_indrasaputra_toggle_v1_toggle_proto_rawDescData
}

var file_proto_indrasaputra_toggle_v1_toggle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_indrasaputra_toggle_v1_toggle_proto_goTypes = []interface{}{
	(ToggleErrorCode)(0),           // 0: proto.indrasaputra.toggle.v1.ToggleErrorCode
	(*CreateToggleRequest)(nil),    // 1: proto.indrasaputra.toggle.v1.CreateToggleRequest
	(*CreateToggleResponse)(nil),   // 2: proto.indrasaputra.toggle.v1.CreateToggleResponse
	(*GetToggleByKeyRequest)(nil),  // 3: proto.indrasaputra.toggle.v1.GetToggleByKeyRequest
	(*GetToggleByKeyResponse)(nil), // 4: proto.indrasaputra.toggle.v1.GetToggleByKeyResponse
	(*GetAllTogglesRequest)(nil),   // 5: proto.indrasaputra.toggle.v1.GetAllTogglesRequest
	(*GetAllTogglesResponse)(nil),  // 6: proto.indrasaputra.toggle.v1.GetAllTogglesResponse
	(*EnableRequest)(nil),          // 7: proto.indrasaputra.toggle.v1.EnableRequest
	(*EnableResponse)(nil),         // 8: proto.indrasaputra.toggle.v1.EnableResponse
	(*DisableRequest)(nil),         // 9: proto.indrasaputra.toggle.v1.DisableRequest
	(*DisableResponse)(nil),        // 10: proto.indrasaputra.toggle.v1.DisableResponse
	(*DeleteToggleRequest)(nil),    // 11: proto.indrasaputra.toggle.v1.DeleteToggleRequest
	(*DeleteToggleResponse)(nil),   // 12: proto.indrasaputra.toggle.v1.DeleteToggleResponse
	(*Toggle)(nil),                 // 13: proto.indrasaputra.toggle.v1.Toggle
	(*ToggleError)(nil),            // 14: proto.indrasaputra.toggle.v1.ToggleError
	(*timestamppb.Timestamp)(nil),  // 15: google.protobuf.Timestamp
}
var file_proto_indrasaputra_toggle_v1_toggle_proto_depIdxs = []int32{
	13, // 0: proto.indrasaputra.toggle.v1.CreateToggleRequest.toggle:type_name -> proto.indrasaputra.toggle.v1.Toggle
	13, // 1: proto.indrasaputra.toggle.v1.GetToggleByKeyResponse.toggle:type_name -> proto.indrasaputra.toggle.v1.Toggle
	13, // 2: proto.indrasaputra.toggle.v1.GetAllTogglesResponse.toggles:type_name -> proto.indrasaputra.toggle.v1.Toggle
	15, // 3: proto.indrasaputra.toggle.v1.Toggle.created_at:type_name -> google.protobuf.Timestamp
	15, // 4: proto.indrasaputra.toggle.v1.Toggle.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 5: proto.indrasaputra.toggle.v1.ToggleError.error_code:type_name -> proto.indrasaputra.toggle.v1.ToggleErrorCode
	1,  // 6: proto.indrasaputra.toggle.v1.ToggleService.CreateToggle:input_type -> proto.indrasaputra.toggle.v1.CreateToggleRequest
	3,  // 7: proto.indrasaputra.toggle.v1.ToggleService.GetToggleByKey:input_type -> proto.indrasaputra.toggle.v1.GetToggleByKeyRequest
	5,  // 8: proto.indrasaputra.toggle.v1.ToggleService.GetAllToggles:input_type -> proto.indrasaputra.toggle.v1.GetAllTogglesRequest
	7,  // 9: proto.indrasaputra.toggle.v1.ToggleService.Enable:input_type -> proto.indrasaputra.toggle.v1.EnableRequest
	9,  // 10: proto.indrasaputra.toggle.v1.ToggleService.Disable:input_type -> proto.indrasaputra.toggle.v1.DisableRequest
	11, // 11: proto.indrasaputra.toggle.v1.ToggleService.DeleteToggle:input_type -> proto.indrasaputra.toggle.v1.DeleteToggleRequest
	2,  // 12: proto.indrasaputra.toggle.v1.ToggleService.CreateToggle:output_type -> proto.indrasaputra.toggle.v1.CreateToggleResponse
	4,  // 13: proto.indrasaputra.toggle.v1.ToggleService.GetToggleByKey:output_type -> proto.indrasaputra.toggle.v1.GetToggleByKeyResponse
	6,  // 14: proto.indrasaputra.toggle.v1.ToggleService.GetAllToggles:output_type -> proto.indrasaputra.toggle.v1.GetAllTogglesResponse
	8,  // 15: proto.indrasaputra.toggle.v1.ToggleService.Enable:output_type -> proto.indrasaputra.toggle.v1.EnableResponse
	10, // 16: proto.indrasaputra.toggle.v1.ToggleService.Disable:output_type -> proto.indrasaputra.toggle.v1.DisableResponse
	12, // 17: proto.indrasaputra.toggle.v1.ToggleService.DeleteToggle:output_type -> proto.indrasaputra.toggle.v1.DeleteToggleResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_indrasaputra_toggle_v1_toggle_proto_init() }
func file_proto_indrasaputra_toggle_v1_toggle_proto_init() {
	if File_proto_indrasaputra_toggle_v1_toggle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateToggleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateToggleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToggleByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToggleByKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTogglesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTogglesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteToggleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteToggleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toggle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_indrasaputra_toggle_v1_toggle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_indrasaputra_toggle_v1_toggle_proto_goTypes,
		DependencyIndexes: file_proto_indrasaputra_toggle_v1_toggle_proto_depIdxs,
		EnumInfos:         file_proto_indrasaputra_toggle_v1_toggle_proto_enumTypes,
		MessageInfos:      file_proto_indrasaputra_toggle_v1_toggle_proto_msgTypes,
	}.Build()
	File_proto_indrasaputra_toggle_v1_toggle_proto = out.File
	file_proto_indrasaputra_toggle_v1_toggle_proto_rawDesc = nil
	file_proto_indrasaputra_toggle_v1_toggle_proto_goTypes = nil
	file_proto_indrasaputra_toggle_v1_toggle_proto_depIdxs = nil
}
