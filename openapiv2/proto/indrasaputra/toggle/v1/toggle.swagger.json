{
  "swagger": "2.0",
  "info": {
    "title": "Feature-Toggle API",
    "version": "1.0.0",
    "contact": {
      "name": "Indra Saputra",
      "url": "https://github.com/indrasaputra"
    },
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/indrasaputra/toggle/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "ToggleCommandService",
      "description": "This service provides basic command or state-changing use cases to work with feature-toggle.A toggle is represented by a key as its unique identifier."
    },
    {
      "name": "ToggleQueryService",
      "description": "This service provides basic query or data-retrieving use cases to work with feature-toggle.A toggle is represented by a key as its unique identifier."
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/toggles": {
      "get": {
        "summary": "Get many toggles.",
        "description": "This endpoint gets all available toggles in the system.\nCurrently, it only retrieves 10 toggles at most.",
        "operationId": "ToggleQueryService_GetAllToggles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllTogglesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ToggleQueryService"
        ]
      },
      "post": {
        "summary": "Create a new toggle.",
        "description": "This endpoint creates a new toggle with provided key and description.\nThe description can be left empty, but the key must exists.\nThe key must be unique and it can only contain alphanumeric and dash.\nThe key will be converted to lower case.",
        "operationId": "ToggleCommandService_CreateToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateToggleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "toggle represents toggle data.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Toggle"
            }
          }
        ],
        "tags": [
          "ToggleCommandService"
        ]
      }
    },
    "/v1/toggles/{key}": {
      "get": {
        "summary": "Get a toggle.",
        "description": "This endpoint gets a single toggle by its key.",
        "operationId": "ToggleQueryService_GetToggleByKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetToggleByKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "Unique identifier of a toggle",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ToggleQueryService"
        ]
      },
      "delete": {
        "summary": "Delete a toggle.",
        "description": "This endpoint deletes a toggle by its key.\nThe operation is hard-delete, thus the toggle will be gone forever.",
        "operationId": "ToggleCommandService_DeleteToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteToggleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "Unique identifier of a toggle",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ToggleCommandService"
        ]
      }
    },
    "/v1/toggles/{key}/disable": {
      "put": {
        "summary": "Disable a toggle.",
        "description": "This endpoint set toggle's usability to inactive.\nIts *isEnabled* attribute will be set to false.",
        "operationId": "ToggleCommandService_DisableToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisableToggleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "Unique identifier of a toggle",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ToggleCommandService"
        ]
      }
    },
    "/v1/toggles/{key}/enable": {
      "put": {
        "summary": "Enable a toggle.",
        "description": "This endpoint set toggle's usability to active.\nIts *isEnabled* attribute will be set to true.",
        "operationId": "ToggleCommandService_EnableToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EnableToggleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "Unique identifier of a toggle",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ToggleCommandService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateToggleResponse": {
      "type": "object",
      "description": "CreateToggleResponse represents response from create toggle."
    },
    "v1DeleteToggleResponse": {
      "type": "object",
      "description": "DeleteToggleResponse represents request from delete a toggle."
    },
    "v1DisableToggleResponse": {
      "type": "object",
      "description": "DisableToggleResponse represents request from disable a toggle."
    },
    "v1EnableToggleResponse": {
      "type": "object",
      "description": "EnableToggleResponse represents request from enable a toggle."
    },
    "v1GetAllTogglesResponse": {
      "type": "object",
      "properties": {
        "toggles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Toggle"
          },
          "description": "toggles represents an array of toggle data."
        }
      },
      "description": "GetAllTogglesResponse represents response from get all toggles."
    },
    "v1GetToggleByKeyResponse": {
      "type": "object",
      "properties": {
        "toggle": {
          "$ref": "#/definitions/v1Toggle",
          "description": "toggle represents toggle data."
        }
      },
      "description": "GetToggleByKeyResponse represents response from get toggle by key."
    },
    "v1Toggle": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "dropdown-menubar",
          "description": "Unique identifier of a toggle",
          "maxLength": 50,
          "minLength": 1,
          "required": [
            "key"
          ]
        },
        "isEnabled": {
          "type": "boolean",
          "format": "boolean",
          "example": true,
          "description": "Toggle's usability status",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "example": "toggle for showing/unshowing dropdown menubar",
          "description": "A concise description of a toggle",
          "maxLength": 255,
          "minLength": 1
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "created_at represents when the toggle was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "updated_at represents when the toggle was last updated.",
          "readOnly": true
        }
      },
      "description": "Toggle represents a toggle data.",
      "required": [
        "key"
      ]
    }
  }
}
